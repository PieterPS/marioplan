{"version":3,"sources":["serviceWorker.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/projects/CreateProjects.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["Boolean","window","location","hostname","match","connect","signOut","dispatch","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","isLoaded","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","params","data","CreateProject","handleChange","e","setState","target","value","handleSubmit","preventDefault","createProject","history","push","onSubmit","htmlFor","onChange","getFirestore","authorId","add","firstName","lastName","Date","payload","catch","err","SignIn","email","password","signIn","authError","console","log","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","res","doc","set","App","path","exact","component","ProjectDetails","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rffProps","useFirestoreForProfile","config","userProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"+PAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,yDCCSC,cAAQ,KAAM,CAAEC,QCNR,kBAAM,SAACC,EAAUC,EAAX,IACVC,EADmD,EAAlBA,eAGzCC,OAAOJ,UAAUK,MAAK,WAC7BJ,EAAS,CAAEK,KAAM,0BDENP,EAdO,SAAAQ,GACpB,OACE,yBAAKC,UAAU,6BACb,wBAAIA,UAAU,SACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBACJ,4BAAI,uBAAGC,QAASH,EAAMP,SAAlB,YACJ,4BAAI,kBAAC,IAAD,CAASS,GAAG,IAAID,UAAU,mCAC1BD,EAAMI,QAAQC,gBEEXC,EAXQ,WACrB,OACE,yBAAKL,UAAU,6BACb,wBAAIA,UAAU,SACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,aCiBGV,eAPS,SAAAe,GACtB,MAAO,CACLV,KAAMU,EAAMC,SAASX,KACrBO,QAASG,EAAMC,SAASJ,WAIbZ,EAnBA,SAAC,GAAuB,IAArBK,EAAoB,EAApBA,KAAMO,EAAc,EAAdA,QAChBK,EAAQZ,EAAKa,IAAM,kBAAC,EAAD,CAAeN,QAASA,IAAc,kBAAC,EAAD,MAC/D,OACE,yBAAKH,UAAU,6BACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,aACEJ,EAAKc,UAAYF,O,iBCgBZG,EAzBO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACvB,OACE,yBAAKZ,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAhB,iBACA,wBAAIA,UAAU,iBACVY,GAAiBA,EAAcC,KAAI,SAAAC,GACnC,OACE,wBAAIC,IAAKD,EAAKE,IACZ,0BAAMhB,UAAU,aAAcc,EAAKG,KAAnC,KACA,8BAAQH,EAAKI,SACb,yBAAKlB,UAAU,uBACXmB,IAAOL,EAAKM,KAAKC,UAAUC,oBCDlCC,EAZQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,yBAAKxB,UAAU,kCACb,yBAAKA,UAAU,wCACb,0BAAMA,UAAU,cAAcwB,EAAQC,OACtC,wCAAeD,EAAQE,gBAAvB,IAA0CF,EAAQG,gBAClD,uBAAG3B,UAAU,aAAcmB,IAAOK,EAAQI,UAAUP,UAAUQ,eCUvDC,EAdK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,yBAAK/B,UAAU,wBACX+B,GAAYA,EAASlB,KAAI,SAAAW,GACzB,OACE,kBAAC,IAAD,CAAMvB,GAAE,mBAAcuB,EAAQR,IAAMD,IAAKS,EAAQR,IAC/C,kBAAC,EAAD,CAAgBQ,QAASA,UCH/BQ,E,uKACM,IAAD,EACmCC,KAAKlC,MAAvCgC,EADD,EACCA,SAAUnC,EADX,EACWA,KAAMgB,EADjB,EACiBA,cAExB,OAAKhB,EAAKa,IAGR,yBAAKT,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAa+B,SAAUA,KAEzB,yBAAK/B,UAAU,wBACb,kBAAC,EAAD,CAAeY,cAAeA,OAThB,kBAAC,IAAD,CAAUX,GAAG,gB,GAJfiC,aA6BTC,cACb5C,aATsB,SAAAe,GACtB,MAAO,CACLyB,SAAUzB,EAAM8B,UAAUC,QAAQN,SAClCnC,KAAMU,EAAMC,SAASX,KACrBgB,cAAeN,EAAM8B,UAAUC,QAAQzB,kBAMzC0B,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJhDL,CAMbH,GCGaG,cACb5C,aAXsB,SAACe,EAAOoC,GAAc,IACpC1B,EAAO0B,EAASpD,MAAMqD,OAAtB3B,GACAe,EAAazB,EAAM8B,UAAUQ,KAA7Bb,SAER,MAAO,CACLP,QAFcO,EAAWA,EAASf,GAAM,KAGxCpB,KAAMU,EAAMC,SAASX,SAMvB0C,2BAAiB,CACf,CAAEC,WAAY,cAHHJ,EAvCQ,SAAApC,GAAU,IACvByB,EAAkBzB,EAAlByB,QAER,OAF0BzB,EAATH,KAEPa,IAENe,EAEA,yBAAKxB,UAAU,qCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAewB,EAAQC,OACvC,2BAAKD,EAAQN,UAEf,yBAAKlB,UAAU,wCACb,0CAAiBwB,EAAQE,gBAAzB,IAA6CF,EAAQG,gBACrD,6BAAOR,IAAOK,EAAQI,UAAUP,UAAUQ,eAQlD,yBAAK7B,UAAU,oBACb,kDArBkB,kBAAC,IAAD,CAAUC,GAAG,e,gBCL/B4C,E,4MACJvC,MAAO,CACLmB,MAAO,GACPP,QAAS,I,EAGX4B,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOjC,GAAK+B,EAAEE,OAAOC,S,EAG5BC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKrD,MAAMsD,cAAc,EAAK/C,OAC9B,EAAKP,MAAMuD,QAAQC,KAAK,M,uDAMxB,OAFiBtB,KAAKlC,MAAdH,KAEEa,IAGR,yBAAKT,UAAU,aACb,0BAAMwD,SAAUvB,KAAKkB,aAAcnD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,sBACA,6BACA,yBAAKA,UAAU,eACb,2BAAOyD,QAAQ,SAAf,SACA,2BAAO3D,KAAK,OAAOkB,GAAG,QAAQ0C,SAAUzB,KAAKa,aAAcI,MAAOjB,KAAK3B,MAAMmB,SAE/E,yBAAKzB,UAAU,eACb,2BAAOyD,QAAQ,WAAf,WACA,8BAAUzD,UAAU,uBAAuBgB,GAAG,UAAU0C,SAAUzB,KAAKa,aAAcI,MAAOjB,KAAK3B,MAAMY,WAEzG,yBAAKlB,UAAU,eACb,4BAAQA,UAAU,gCAAlB,aAhBc,kBAAC,IAAD,CAAUC,GAAG,gB,GApBXiC,aAkDb3C,eANS,SAAAe,GACtB,MAAO,CACLV,KAAMU,EAAMC,SAASX,QAIe,CAAEyD,cCvDb,SAAA7B,GAAO,OAAI,SAAC/B,EAAUC,EAAX,GAAuD,EAAhCC,YAAiC,IACxFyC,GAAYuB,EAD2E,EAAnBA,gBAElExD,EAAYT,IAAWa,SAAvBJ,QACFyD,EAAWlE,IAAWa,SAASX,KAAKa,IAE1C2B,EAAUG,WAAW,YAAYsB,IAAjC,2BACKrC,GADL,IAEEE,gBAAiBvB,EAAQ2D,UACzBnC,eAAgBxB,EAAQ4D,SACxBH,WACAhC,UAAW,IAAIoC,QACdnE,MAAK,WACNJ,EAAS,CAAEK,KAAM,iBAAkBmE,QAASzC,OAC3C0C,OAAM,SAAAC,GACP1E,EAAS,CAAEK,KAAM,uBAAwBmE,QAASE,UDyCvC5E,CAA4CsD,GElDrDuB,E,4MACJ9D,MAAO,CACL+D,MAAO,GACPC,SAAU,I,EAGZxB,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOjC,GAAK+B,EAAEE,OAAOC,S,EAG5BC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKrD,MAAMwE,OAAO,EAAKjE,Q,uDAGf,IAAD,EACqB2B,KAAKlC,MAAzByE,EADD,EACCA,UAER,OAHO,EACY5E,KAEVa,IAAY,kBAAC,IAAD,CAAUR,GAAG,MAGhC,yBAAKD,UAAU,aACb,0BAAMwD,SAAUvB,KAAKkB,aAAcnD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,6BACA,yBAAKA,UAAU,eACb,2BAAOyD,QAAQ,SAAf,SACA,2BAAO3D,KAAK,QAAQkB,GAAG,QAAQ0C,SAAUzB,KAAKa,aAAcI,MAAOjB,KAAK3B,MAAM+D,SAEhF,yBAAKrE,UAAU,eACb,2BAAOyD,QAAQ,YAAf,YACA,2BAAO3D,KAAK,WAAWkB,GAAG,WAAW0C,SAAUzB,KAAKa,aAAcI,MAAOjB,KAAK3B,MAAMgE,YAEtF,yBAAKtE,UAAU,eACb,4BAAQA,UAAU,gCAAlB,SACA,yBAAKA,UAAU,mBACXwE,EAAY,2BAAIA,GAAiB,a,GArC5BtC,aAsDN3C,eARS,SAAAe,GAEtB,OADAmE,QAAQC,IAAIpE,GACL,CACLkE,UAAWlE,EAAMV,KAAK4E,UACtB5E,KAAMU,EAAMC,SAASX,QAIe,CAAE2E,OV3DpB,SAAAI,GAAW,OAAI,SAAClF,EAAUC,EAAX,IAClBC,EAD2D,EAAlBA,eAGjDC,OAAOgF,2BACdD,EAAYN,MACZM,EAAYL,UACZzE,MAAK,WACLJ,EAAS,CAAEK,KAAM,qBAChBoE,OAAM,SAAAC,GACP1E,EAAS,CAAEK,KAAM,cAAemE,QAASE,UUkD9B5E,CAAqC6E,GCtD9CS,E,4MACJvE,MAAO,CACL+D,MAAO,GACPC,SAAU,GACVR,UAAW,GACXC,SAAU,I,EAGZjB,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOjC,GAAK+B,EAAEE,OAAOC,S,EAG5BC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKrD,MAAM+E,OAAO,EAAKxE,Q,uDAGf,IAAD,EACqB2B,KAAKlC,MAAzBH,EADD,EACCA,KAAM4E,EADP,EACOA,UAEd,OAAI5E,EAAKa,IAAY,kBAAC,IAAD,CAAUR,GAAG,MAGhC,yBAAKD,UAAU,aACb,0BAAMwD,SAAUvB,KAAKkB,aAAcnD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,6BACA,yBAAKA,UAAU,eACb,2BAAOyD,QAAQ,SAAf,SACA,2BAAO3D,KAAK,QAAQkB,GAAG,QAAQ0C,SAAUzB,KAAKa,aAAcI,MAAOjB,KAAK3B,MAAM+D,SAEhF,yBAAKrE,UAAU,eACb,2BAAOyD,QAAQ,YAAf,YACA,2BAAO3D,KAAK,WAAWkB,GAAG,WAAW0C,SAAUzB,KAAKa,aAAcI,MAAOjB,KAAK3B,MAAMgE,YAEtF,yBAAKtE,UAAU,eACb,2BAAOyD,QAAQ,aAAf,cACA,2BAAO3D,KAAK,OAAOkB,GAAG,YAAY0C,SAAUzB,KAAKa,aAAcI,MAAOjB,KAAK3B,MAAMwD,aAEnF,yBAAK9D,UAAU,eACb,2BAAOyD,QAAQ,YAAf,aACA,2BAAO3D,KAAK,OAAOkB,GAAG,WAAW0C,SAAUzB,KAAKa,aAAcI,MAAOjB,KAAK3B,MAAMyD,YAElF,yBAAK/D,UAAU,eACb,4BAAQA,UAAU,gCAAlB,YAEF,yBAAKA,UAAU,mBACXwE,EAAY,2BAAKA,GAAkB,Y,GAhD5BtC,aA+DN3C,eAPS,SAAAe,GACtB,MAAO,CACLV,KAAMU,EAAMC,SAASX,KACrB4E,UAAWlE,EAAMV,KAAK4E,aAIc,CAAEM,OX/CpB,SAAAC,GAAO,OAAI,SAACtF,EAAUC,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YAAagE,EAAmB,EAAnBA,aAC7DpD,EAAWZ,IACXyC,EAAYuB,IAElBpD,EAASX,OAAOoF,+BACdD,EAAQV,MACRU,EAAQT,UACRzE,MAAK,SAAAoF,GACL,OAAO7C,EAAUG,WAAW,SAAS2C,IAAID,EAAIhE,KAAKR,KAAK0E,IAAI,CACzDrB,UAAWiB,EAAQjB,UACnBC,SAAUgB,EAAQhB,SAClB3D,SAAU2E,EAAQjB,UAAU,GAAKiB,EAAQhB,SAAS,QAEnDlE,MAAK,WACNJ,EAAS,CAAEK,KAAM,sBAChBoE,OAAM,SAAAC,GACP1E,EAAS,CAAEK,KAAM,eAAgBmE,QAASE,UW+B/B5E,CAAqCsF,GCvCrCO,E,uKAjBX,OACE,kBAAC,IAAD,KACE,yBAAKpF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqF,KAAK,IAAIC,OAAK,EAACC,UAAWvD,IACjC,kBAAC,IAAD,CAAOqD,KAAK,eAAeE,UAAWC,IACtC,kBAAC,IAAD,CAAOH,KAAK,UAAUE,UAAWnB,IACjC,kBAAC,IAAD,CAAOiB,KAAK,UAAUE,UAAWV,IACjC,kBAAC,IAAD,CAAOQ,KAAK,UAAUE,UAAW1C,W,GAX3BX,aCVZuD,EAAY,CAChBjB,UAAW,MAqCEkB,EAlCK,WAAgC,IAA/BpF,EAA8B,uDAAtBmF,EAAWE,EAAW,uCACjD,OAAQA,EAAO7F,MACb,IAAK,cAEH,OADA2E,QAAQC,IAAI,gBACL,2BACFpE,GADL,IAEEkE,UAAWmB,EAAO1B,QAAQ2B,UAE9B,IAAK,gBAEH,OADAnB,QAAQC,IAAI,iBACL,2BACFpE,GADL,IAEEkE,UAAW,OAEf,IAAK,kBAEH,OADAC,QAAQC,IAAI,mBACLpE,EACT,IAAK,iBAEH,OADAmE,QAAQC,IAAI,kBACL,2BACFpE,GADL,IAEEkE,UAAW,OAEf,IAAK,eAEH,OADAC,QAAQC,IAAI,gBACL,2BACFpE,GADL,IAEEkE,UAAWmB,EAAO1B,QAAQ2B,UAE9B,QACE,OAAOtF,IClCPmF,EAAY,GAeHI,EAbQ,WAAgC,IAA/BvF,EAA8B,uDAAtBmF,EAAWE,EAAW,uCACpD,OAAQA,EAAO7F,MACb,IAAK,iBAEH,OADA2E,QAAQC,IAAI,kBAAmBiB,EAAO1B,SAC/B3D,EACT,IAAK,uBAEH,OADAmE,QAAQC,IAAI,uBAAwBiB,EAAO1B,SACpC3D,EACT,QACE,OAAOA,ICEEwF,EAPKC,YAAgB,CAClCnG,KAAM8F,EACNlE,QAASqE,EACTtF,SAAUyF,kBACV5D,UAAW6D,qB,wBCKb1F,IAAS2F,cAVY,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAITlG,IAAS6B,YAEM7B,QAAf,ECEMmG,EAAQC,YAAYb,EACxB3D,YACEyE,YAAgBC,IAAMC,kBAAkB,CAACnH,0BAAagE,+BACtDoD,yBAAexG,KAIbyG,EAAW,CACfzG,WACA0G,wBAAwB,EACxBC,OAfgB,CAChBC,YAAa,QACbF,wBAAwB,GAcxBxH,SAAUiH,EAAMjH,SAChB2H,mDAGFC,IAASC,OACP,kBAAC,IAAD,CAAUZ,MAAOA,GACf,kBAAC,6BAA+BM,EAC9B,kBAAC,EAAD,QAGJO,SAASC,eAAe,SnB0FpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9H,MAAK,SAAA+H,GACJA,EAAaC,gBAEd3D,OAAM,SAAA4D,GACLrD,QAAQqD,MAAMA,EAAMlC,c","file":"static/js/main.bb92b507.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Profiler } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <ul className=\"right\">\r\n        <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          { props.profile.initials }\r\n        </NavLink></li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default connect(null, { signOut })(SignedInLinks);","export const signIn = credentials => (dispatch, getState, { getFirebase }) => {\r\n  const firebase = getFirebase();\r\n\r\n  firebase.auth().signInWithEmailAndPassword(\r\n    credentials.email,\r\n    credentials.password\r\n  ).then(() => {\r\n    dispatch({ type: 'LOGIN_SUCCESS' });\r\n  }).catch(err => {\r\n    dispatch({ type: 'LOGIN_ERROR', payload: err });\r\n  });\r\n};\r\n\r\nexport const signOut = () => (dispatch, getState, { getFirebase }) => {\r\n  const firebase = getFirebase();\r\n\r\n  firebase.auth().signOut().then(() => {\r\n    dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n  });\r\n};\r\n\r\nexport const signUp = newUser => (dispatch, getState, { getFirebase, getFirestore }) => {\r\n  const firebase = getFirebase();\r\n  const firestore = getFirestore();\r\n\r\n  firebase.auth().createUserWithEmailAndPassword(\r\n    newUser.email,\r\n    newUser.password\r\n  ).then(res => {\r\n    return firestore.collection('users').doc(res.user.uid).set({\r\n      firstName: newUser.firstName,\r\n      lastName: newUser.lastName,\r\n      initials: newUser.firstName[0] + newUser.lastName[0]\r\n    })\r\n  }).then(() => {\r\n    dispatch({ type: 'SIGNUP_SUCCESS' })\r\n  }).catch(err => {\r\n    dispatch({ type: 'SIGNUP_ERROR', payload: err })\r\n  })\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <ul className=\"right\">\r\n        <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n        <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = ({ auth, profile }) => {\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\r\n        { auth.isLoaded && links }\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = ({ notifications }) => {\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            { notifications && notifications.map(item => {\r\n              return (\r\n                <li key={item.id}>\r\n                  <span className=\"pink-text\">{ item.user } </span>\r\n                  <span>{ item.content }</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    { moment(item.time.toDate()).fromNow() }\r\n                  </div>\r\n                </li>\r\n              )\r\n            }) }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>Posted by { project.authorFirstName } {project.authorLastName }</p>\r\n        <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ProjectSummary from './ProjectSummary';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project => {\r\n        return (\r\n          <Link to={`/project/${project.id}`} key={project.id}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n\r\n    if (!auth.uid) return <Redirect to='/signin' />;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = props => {\r\n  const { project, auth } = props;\r\n\r\n  if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n  if (project) {\r\n    return(\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{ project.title }</span>\r\n            <p>{ project.content }</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n            <div>{ moment(project.createdAt.toDate()).calendar() }</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container center\">\r\n      <p>Loading Project...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { id } = ownProps.match.params;\r\n  const { projects } = state.firestore.data;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(ProjectDetails);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state= {\r\n    title: '',\r\n    content: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grye-text text-darken-3\">Create new project</h5>\r\n          <br />\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} value={this.state.title} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange} value={this.state.content} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createProject })(CreateProject);\r\n","export const createProject = project => (dispatch, getState, { getFirebase, getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const { profile } = getState().firebase;\r\n  const authorId = getState().firebase.auth.uid;\r\n\r\n  firestore.collection('projects').add({\r\n    ...project,\r\n    authorFirstName: profile.firstName,\r\n    authorLastName: profile.lastName,\r\n    authorId,\r\n    createdAt: new Date()\r\n  }).then(() => {\r\n    dispatch({ type: 'CREATE_PROJECT', payload: project })\r\n  }).catch(err => {\r\n    dispatch({ type: 'CREATE_PROJECT_ERROR', payload: err })\r\n  });\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state= {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n\r\n    if (auth.uid) return <Redirect to='/' />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grye-text text-darken-3\">Sign In</h5>\r\n          <br />\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} value={this.state.email} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} value={this.state.password} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state)\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn })(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state= {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n\r\n    if (auth.uid) return <Redirect to='/' />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grye-text text-darken-3\">Sign Up</h5>\r\n          <br />\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} value={this.state.email} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} value={this.state.password} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} value={this.state.firstName} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} value={this.state.lastName} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            { authError ? <p>{ authError }</p> : null }\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signUp })(SignUp);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport CreateProject from './components/projects/CreateProjects';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('Login Failed');\r\n      return {\r\n        ...state,\r\n        authError: action.payload.message\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('Login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return {\r\n        ...state,\r\n        authError: action.payload.message\r\n      };\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default authReducer;","const initState = {};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type){\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.payload);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.payload);\r\n      return state;\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAY_x9Div3cMqAFSTzAA5AdUuv9HX-UxAw\",\r\n  authDomain: \"marioplan-521d5.firebaseapp.com\",\r\n  databaseURL: \"https://marioplan-521d5.firebaseio.com\",\r\n  projectId: \"marioplan-521d5\",\r\n  storageBucket: \"marioplan-521d5.appspot.com\",\r\n  messagingSenderId: \"549888098115\",\r\n  appId: \"1:549888098115:web:19fa36fa1f6961a11f79f6\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport 'firebase/firestore';\n\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\nimport rootReducer from './store/reducers/rootReducer';\nimport firebase from './config/fbConfig';\n\nconst rrfConfig = { \n  userProfile: 'users',\n  useFirestoreForProfile: true\n}\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(firebase)\n  )\n);\n\nconst rffProps = {\n  firebase,\n  useFirestoreForProfile: true,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rffProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}